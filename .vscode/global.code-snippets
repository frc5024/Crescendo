{
	"statemachine-subsystem": {
		"prefix": "Statemachine Subsystem",
		"isFileTemplate": true,
		"body": [
		  "package frc.robot.subsystems;",
		  "",
		  "import com.team5024.lib.statemachines.StateMachine;",
		  "import com.team5024.lib.statemachines.StateMetadata;",
		  "",
		  "import edu.wpi.first.wpilibj2.command.SubsystemBase;",
		  "",
		  "public class ${TM_FILENAME/(.*)\\..+$/$1/} extends SubsystemBase {",
		  "  private static ${TM_FILENAME/(.*)\\..+$/$1/} mInstance = null;",
		  "",
		  "  public static ${TM_FILENAME/(.*)\\..+$/$1/} getInstance() {",
		  "    if (mInstance == null) {",
		  "      mInstance = new ${TM_FILENAME/(.*)\\..+$/$1/}();",
		  "    }",
		  "",
		  "    return mInstance;",
		  "  }",
		  "",
		  "  public enum State {",
		  "    Idle,",
		  "    Testing",
		  "  }",
		  "",
		  "  protected StateMachine<State> stateMachine;",
		  "",
		  "  private ${TM_FILENAME/(.*)\\..+$/$1/}() {",
		  "    stateMachine = new StateMachine<>(\"${TM_FILENAME/(.*)\\..+$/$1/}\");",
		  "    stateMachine.setDefaultState(State.Idle, this::handleIdleState);",
		  "    stateMachine.addState(State.Testing, this::handleTestingState);",
		  "  }",
		  "",
		  "  private void handleIdleState(StateMetadata<State> metadata) {",
		  "",
		  "  }",
		  "",
		  "  private void handleTestingState(StateMetadata<State> metadata) {",
		  "",
		  "  }",
		  "}",
		  ""
		],
		"description": "Fills the file with a Subsytem StateMachine template."
	  }
}